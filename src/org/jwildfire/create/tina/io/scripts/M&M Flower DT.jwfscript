/* M&M-Flower by DT   
 ScriptInfo
author="Don Town " category="randomizer"
info="started from M&Ms script
Added randomization   Enjoy
08/21/2014 
*/
import org.jwildfire.create.tina.base.Flame;
import org.jwildfire.create.tina.base.XForm;
import org.jwildfire.create.tina.palette.RGBPalette;
import org.jwildfire.create.tina.script.ScriptRunnerEnvironment;
import org.jwildfire.create.tina.transform.XFormTransformService;
import org.jwildfire.create.tina.base.Layer;
import org.jwildfire.create.tina.variation.VariationFunc;
import org.jwildfire.create.tina.variation.VariationFuncList;
import org.jwildfire.create.tina.mutagen.RandomGradientMutation;
import org.jwildfire.create.tina.transform.XFormTransformService;

double rnd = Math.random();
double rnd2 = Math.random();
public void run(ScriptRunnerEnvironment pEnv) throws Exception {
  // create a new flame
  Flame flame=new Flame();  flame.getLayers().clear(); // get rid of the default layer because we create all layers by ourselves  // set the flame main attributes
  flame.setCamRoll(-59.97);
  flame.setCamPitch(0);
  flame.setCamYaw(0);
  flame.setCamPerspective(0);
  flame.setWidth(784);
  flame.setHeight(441);
  flame.setPixelsPerUnit(169.85066861);
  flame.setCamZoom(1);
  flame.setBGTransparency(false);
  flame.setGamma(2.5);
  // create layer 1
  {
    Layer layer = new Layer();
    flame.getLayers().add(layer);
    layer.setWeight(1);
    layer.setVisible(true);
    // create a random gradient
    new RandomGradientMutation().execute(layer);
    // create transform 1
    {
      XForm xForm = new XForm();
      layer.getXForms().add(xForm);
      xForm.setWeight(0.70958);
      xForm.setColor(rnd);
      xForm.setColorSymmetry(-1);

      xForm.setCoeff00(0.27298); // a
      xForm.setCoeff10(-0.39903); // b
      xForm.setCoeff20(-1.91); // e
      xForm.setCoeff01(0.39903); // c
      xForm.setCoeff11(0.27298); // d
      xForm.setCoeff21(0.22227); // f

      xForm.setPostCoeff00(1);
      xForm.setPostCoeff10(0);
      xForm.setPostCoeff01(0);
      xForm.setPostCoeff11(1);
      xForm.setPostCoeff20(0);
      xForm.setPostCoeff21(0);

      // change relative weights
      xForm.getModifiedWeights()[0] = 0;

      // variation 1
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("synth", true);
        varFunc.setParameter("a", 1);
        varFunc.setParameter("mode", 3);
        varFunc.setParameter("power", -2);
        varFunc.setParameter("mix", 0);
        varFunc.setParameter("smooth", 0);
        varFunc.setParameter("b", 0);
        varFunc.setParameter("b_type", 0);
        varFunc.setParameter("b_skew", 0);
        varFunc.setParameter("b_frq", 1);
        varFunc.setParameter("b_phs", 0);
        varFunc.setParameter("b_layer", 0);
        varFunc.setParameter("c", 0);
        varFunc.setParameter("c_type", 0);
        varFunc.setParameter("c_skew", 0);
        varFunc.setParameter("c_frq", 1);
        varFunc.setParameter("c_phs", 0);
        varFunc.setParameter("c_layer", 0);
        varFunc.setParameter("d", 0);
        varFunc.setParameter("d_type", 0);
        varFunc.setParameter("d_skew", 0);
        varFunc.setParameter("d_frq", 1);
        varFunc.setParameter("d_phs", 0);
        varFunc.setParameter("d_layer", 0);
        varFunc.setParameter("e", 0);
        varFunc.setParameter("e_type", 0);
        varFunc.setParameter("e_skew", 0);
        varFunc.setParameter("e_frq", 1);
        varFunc.setParameter("e_phs", 0);
        varFunc.setParameter("e_layer", 0);
        varFunc.setParameter("f", 0);
        varFunc.setParameter("f_type", 0);
        varFunc.setParameter("f_skew", 0);
        varFunc.setParameter("f_frq", 1);
        varFunc.setParameter("f_phs", 0);
        varFunc.setParameter("f_layer", 0);
        xForm.addVariation(1, varFunc);
      }
      // random affine transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
      // random affine post transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
    }
    // create transform 2
    {
      XForm xForm = new XForm();
      layer.getXForms().add(xForm);
      xForm.setWeight(30.79);
      xForm.setColor(rnd2);
      xForm.setColorSymmetry(-1);

      xForm.setCoeff00(1.05); // a
      xForm.setCoeff10(-1.29); // b
      xForm.setCoeff20(-2.7); // e
      xForm.setCoeff01(1.29); // c
      xForm.setCoeff11(1.05); // d
      xForm.setCoeff21(-1.36); // f

      xForm.setPostCoeff00(1);
      xForm.setPostCoeff10(0);
      xForm.setPostCoeff01(0);
      xForm.setPostCoeff11(1);
      xForm.setPostCoeff20(0.70445003);
      xForm.setPostCoeff21(-0.35287435);

      // variation 1
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("juliascope", true);
        varFunc.setParameter("power", 2);
        varFunc.setParameter("dist", 1.82);
        xForm.addVariation(0.67456, varFunc);
      }
      // random affine transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
      // random affine post transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
    }
    // create transform 3
    {
      XForm xForm = new XForm();
      layer.getXForms().add(xForm);
      xForm.setWeight(0.5);
      xForm.setColor(rnd);
      xForm.setColorSymmetry(-1);

      xForm.setCoeff00(1); // a
      xForm.setCoeff10(0); // b
      xForm.setCoeff20(0); // e
      xForm.setCoeff01(0); // c
      xForm.setCoeff11(1); // d
      xForm.setCoeff21(0); // f

      xForm.setPostCoeff00(1);
      xForm.setPostCoeff10(0);
      xForm.setPostCoeff01(0);
      xForm.setPostCoeff11(1);
      xForm.setPostCoeff20(0);
      xForm.setPostCoeff21(0);

      // variation 1
      xForm.addVariation(0.1, VariationFuncList.getVariationFuncInstance("linear3D", true));
      // random affine transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
      // random affine post transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
    }
    // create final transform 1
    {
      XForm xForm = new XForm();
      layer.getFinalXForms().add(xForm);
      xForm.setWeight(0);
      xForm.setColor(0.2);
      xForm.setColorSymmetry(0.5);

      xForm.setCoeff00(1); // a
      xForm.setCoeff10(0); // b
      xForm.setCoeff20(0); // e
      xForm.setCoeff01(0); // c
      xForm.setCoeff11(1); // d
      xForm.setCoeff21(0); // f

      xForm.setPostCoeff00(1);
      xForm.setPostCoeff10(0);
      xForm.setPostCoeff01(0);
      xForm.setPostCoeff11(1);
      xForm.setPostCoeff20(0);
      xForm.setPostCoeff21(0);

      // variation 1
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("julia3Dq", true);
        varFunc.setParameter("power", 4);
        varFunc.setParameter("divisor", 2);
        xForm.addVariation(0.25, varFunc);
      }
      // variation 2
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("post_julia3Dq", true);
        varFunc.setParameter("power", -1-3*rnd);
        varFunc.setParameter("divisor", -1-3*rnd2);
        xForm.addVariation(1, varFunc);
      }
      // random affine transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
      // random affine post transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
    }
  }
  // Either update the currently selected flame (to not need to create a new thumbnail
  // in the thumbnail ribbon after each run of the script...
  Flame selFlame = pEnv.getCurrFlame();
  if(selFlame!=null) {
    selFlame.assign(flame);
    pEnv.refreshUI();
  }
  // ...or load the flame in the editor and refresh the UI
  else {
    pEnv.setCurrFlame(flame);
  }
}
